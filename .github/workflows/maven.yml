# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven
      - uses: vemonet/setup-spark@v1
        with:
          spark-version: '3.1.2'
      - run: spark-submit --version
      - run: echo $SPARK_HOME
      - name: start minikube
        id: minikube
        uses: medyagh/setup-minikube@master
      - name: kubectl
        run: kubectl get pods -A
      - name: Build Spark Image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          cd $SPARK_HOME
          ./bin/docker-image-tool.sh -m -b java_image_tag=11-jre-slim -t v3.1.2 build
          docker images
      - name: setup k8s
        run: |
          kubectl create ns spark-demo
          kubectl apply -f ./k8s/adb.yaml
          kubectl wait --for=condition=ready pod -l app=adb -n spark-demo
          kubectl get all -n spark-demo
          kubectl port-forward service/adb 8529:8529 -n spark-demo &
      - name: Customize hosts
        run: sudo echo "127.0.0.1 adb" | sudo tee -a /etc/hosts
      - name: Check DB
        run: curl -v -u root:test http://adb:8529/_api/version
      - name: Import data
        run: ./k8s/import.sh
      - name: Test
        run: |
          K8S_SERVER=$(kubectl config view --output=jsonpath='{.clusters[].cluster.server}')
          echo $K8S_SERVER
          mvn -B -e --no-transfer-progress test -DsparkMaster=k8s://$K8S_SERVER
